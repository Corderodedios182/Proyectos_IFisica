- Class: meta
  Course: R for Data Sciences
  Lesson: 1_Manipulacion_Datos_con_dplyr
  Author: your name goes here
  Type: Standard
  Organization: your organization's name goes here
  Version: 2.4.3

- Class: text
  Output: Que es dplyr?

- Class: text
  Output: dplyr es un poderoso paquete R para transformar y resumir datos tabulares con filas y columnas. Con una sintaxis clara y sencilla de aprender.

- Class: text
  Output: Por que es util dplyr?

- Class: text
  Output: El paquete contiene un conjunto de funciones (o "verbos") que realizan operaciones comunes de manipulaci?n de datos como filtrar filas, seleccionar columnas espec?ficas, reordenar filas, agregar nuevas columnas y resumir datos.

- Class: text
  Output: Ademas, dplyr contiene una funcion util para realizar otra tarea comun que es el concepto de "dividir aplicar-combinar". Vamos a discutir eso en un momento.

- Class: text
  Output: Como se compara con el uso de funciones base R?

- Class: text
  Output: Si esta familiarizado con R, probablemente este familiarizado con las funciones basicas de R, como split(), subcset(), apply(), sapply(), lapply(), tapply() y aggregate(). En comparacion con las funciones basicas en R, las funciones en dplyr son mas faciles de trabajar, son mas consistentes en la sintaxis y estan dirigidas al analisis de datos en torno a marcos de datos en lugar de solo vectores.

- Class: text
  Output: Como obtengo dplyr?

- Class: cmd_question
  Output: Para instalar dplyr. Ejecuta en consola -> install.packages("dplyr")
  CorrectAnswer: install.packages("dplyr")
  AnswerTests: omnitest(correctExpr='install.packages("dplyr")')
  Hint: Ejecuta en Consola -> install.packages("dplyr")

- Class: cmd_question
  Output: Carguemos dplyr en nuestro entorno de trabrajo. Ejecuta -> library(dplyr)
  CorrectAnswer: library(dplyr)
  AnswerTests: omnitest(correctExpr='library(dplyr)')
  Hint: Ejecuta en Consola -> library(dplyr)

- Class: text
  Output: Trabajaremos con un conjunto de datos muy interesante llamado gapminder.

- Class: cmd_question
  Output: Trabajaremos con un conjunto de datos muy interesante llamado gapminder. Ejecuta en Consola -> library(gapminder).
  CorrectAnswer: library(gapminder)
  AnswerTests: omnitest(correctExpr='library(gapminder)')
  Hint: Ejecuta en Consola -> library(gapminder). Si te sale un error tal vez te falte instalar la libreria. Recuerda install.packages(gapminder)

- Class: cmd_question
  Output: Conozcamos un poco nuestro datos. Ejecuta -> head(gapminder)
  CorrectAnswer: head(gapminder)
  AnswerTests: omnitest(correctExpr='head(gapminder)')
  Hint: Ejecuta en Consola -> head(gapminder)
